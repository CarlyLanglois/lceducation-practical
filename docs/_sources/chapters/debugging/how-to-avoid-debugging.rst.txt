How to Avoid Debugging
======================

While debugging is an integral part of programming, you can reduce the number of bugs you encounter by working carefully.

Start Small
-----------

This is probably the single biggest piece of advice for programmers at every level. It is tempting to sit down and try to write an entire program at once. But when the program does not work then you have a large number of possibilities for things that might be wrong. The more code, the more the possibilities. Where to start? Where to look first? How to figure out what went wrong? 

When you start work on a large program, it is best to break it down into smaller steps and then start coding just one very small part of it. You might write just 2 lines of code and then make sure that the program runs properly. 

Regularly running your code is quick and easy, and gives you immediate feedback about whether what you have just done is ok or not. 

Keep It Working
---------------

Once you have a small part of your program working, the next step is to figure out something small to add to it. If you keep adding small pieces to the program, one at a time, it is much easier to figure out what went wrong. Any error that occurs was almost certainly introduced by the last line or two of code that was added. Less new code means its easier to figure out where the problem is.

This notion of "get something working and keep it working" is a mantra that you can repeat throughout your career as a programmer. It's a great way to avoid frustration and write working code with less stress. 

Plus, every time you have a little success, your brain releases a tiny bit of a chemical that makes you happy. So, you can keep yourself happy and make programming more enjoyable by creating lots of small victories for yourself.
